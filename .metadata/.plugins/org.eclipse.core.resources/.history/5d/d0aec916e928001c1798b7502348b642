package empSLLmenuderivven;

import Practice.Node;

public class EmpList {
	Node head;
	
	public EmpList() {
		head =null;
	}
	
	public void insertEmp(Employee e) {
		Node temp = new Node();
		temp.setData(e);
		//if list is empty
		if(head==null) {
			head =temp;
		}
		else {
			temp.setNext(head);
			head =temp;
		}
	}
	
	public String toString() {
		Node it;
		it=head;
		String str="";
		while(it!=null) {
			str+=it+"-->\n";
			it=it.getNext();
		}
		return str;
	}

	public void append(Employee e) {
		Node temp =new Node();
		temp.setData(e);
		//if list is empty
		if(head==null) {
			head =temp;
		}
		
		else {
			Node it=head;
			while(it.getNext() != null) {
				it =it.getNext();
			}
			it.setNext(temp);
			
		}
		
		
	}

	public void deletAtpos(int pos) {

		int n =numOfNode();
		Node it =head;

		if(pos == 1) {
			deletFirst();
		}
		else if(pos == n+1) {
			deletLast();
		}
		else if(pos>1 && pos <n) {
			for(int i =1;i<pos-1;i++) {
				it =it.getNext();
			}
			Node temp =it.getNext().getNext();
			it.setNext(temp);
			//temp.setNext(null);

			//it = it.getNext();
			//			temp.setNext(null);
			//System.out.println(temp);
		}
		else {

			System.out.println("Invalid position to delete");

		}

	
	}

	public void deletFirst() {

		Node temp =head;
		if(head ==null) {
			System.out.println("List is empty");
		}
		else {
			//temp =head.getNext();
			head = temp.getNext();
		}
	
		
	}

	public void deletLast() {

		if(head == null) {
			System.out.println("List is empty");
		}
		else {
			Node it =head;
			while(it.getNext().getNext() != null) {
				it =it.getNext();
			}
			Node temp =it;
			it.setNext(null);

		}
	
		
	}

	private int numOfNode() {

		int num=0;
		Node it=head;

		while(it.getNext() != null){
			it =it.getNext();
			num++;
		}
		return num;
	}
}
